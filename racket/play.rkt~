;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-intermediate-lambda-reader.ss" "lang")((modname play) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #f #t none #f () #f)))


(define (directed->undirected dgraph)
  (local [(define newgraph (filter (lambda (x) (not (empty? (second x)))) dgraph))]
   (map (lambda (x) (cond [(list? (first (first x))) (first x)] 
                       [else x])) (map (lambda (a) (create-paths (first a) (second a))) newgraph)))) 

;; (list 'kale (list 'rapini 'cabbage 'broccoli 'turnip)), (list 'cabbage (list 'kale))


(check-expect (directed->undirected
               (list (list 'kale (list 'rapini 'cabbage 'broccoli 'turnip)) (list 'turnip empty)
                     (list 'cabbage (list 'kale)) (list 'rapini empty) (list 'broccoli empty)))
              (list (list 'kale (list 'rapini 'cabbage 'broccoli 'turnip))
                    (list 'rapini (list 'kale))
                    (list 'cabbage (list 'kale))
                    (list 'broccoli (list 'kale))
                    (list 'turnip (list 'kale))))

(define (create-paths x y)
  (map (lambda (z) (list z (list x))) y))


(create-paths 'cabbage (list 'kale)) 



;; (list 'kale (list 'rapini 'cabbage 'broccoli 'turnip)), (list 'cabbage (list 'kale))

(define (directed->undirected dgraph)
  ())
