;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-intermediate-lambda-reader.ss" "lang")((modname a10q04) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #f #t none #f () #f)))
;; ***************************************************
;; Nathan Kwon (20934403)
;; CS 135 Fall 2021
;; Assignment 10, Problem 4
;; ***************************************************

;; a.)
;; (dedup list1) produces a version of [list1] where all the
;;   duplicates have been removed.

;; Examples:
(check-expect (dedup (list 1 2 3 4 4 5 3))
              (list 1 2 4 5 3))
(check-expect (dedup (list 'a 'b 'c 'd 'e 'e 'f))
              (list 'a 'b 'c 'd 'e 'f))

;; dedup: (listof X) -> (listof X)
(define (dedup list1)
  (foldr (lambda (x y)
           (cond [(not (member? x y)) (cons x y)]
                 [else y])) empty list1))

;; Tests:
(check-expect (dedup empty) empty)
(check-expect (dedup (list "obb" "bob" "obb" "obb" "obb"))
              (list "bob" "obb"))
(check-expect (dedup (list 4 4 4 4 4 4)) (list 4))
(check-expect (dedup (list true true false false true))
              (list false true))
(check-expect (dedup (list 4/7 5.5 4 4 -3.2 -3.2))
              (list 4/7 5.5 4 -3.2))
(check-expect (dedup (list true 'a 4 "string"))
              (list true 'a 4 "string"))


